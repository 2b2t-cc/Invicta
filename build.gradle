buildscript {
	repositories {
		jcenter()
		maven {
			name = 'forge'
			url = 'http://files.minecraftforge.net/maven'
		}
		maven {
			name = 'SpongePowered'
			url = 'http://repo.spongepowered.org/maven'
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
		classpath 'org.spongepowered:mixingradle:0.4-SNAPSHOT'
		classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
	}
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

version = modVersion
group = modGroup
archivesBaseName = modBaseName

minecraft {
	version = project.forgeVersion
	mappings = project.mcpVersion
	runDir = "run"
	coreMod = "c.client.impl.mixin.LoadingPlugin"
}

repositories {
	maven {
		url = "https://libraries.minecraft.net"
	}
	maven {
		name = 'spongepowered-repo'
		url = 'http://repo.spongepowered.org/maven/'
	}
	mavenCentral()
}

dependencies {
	compile 'com.mojang:brigadier:1.0.17'
	compile("org.spongepowered:mixin:0.7.4-SNAPSHOT") {
		exclude module: 'launchwrapper'
		exclude module: 'guava'
		exclude module: 'gson'
		exclude module: 'commons-io'
	}
}

processResources {
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	from(sourceSets.main.resources.srcDirs) {
		include "mcmod.info"

		expand "version": project.version, "mcversion": project.minecraft.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "mcmod.info"
	}
}

shadowJar {
	dependencies {
		include(dependency('org.spongepowered:mixin'))
		include(dependency('net.jodah:typetools'))
		include(dependency('org.yaml:snakeyaml'))
		include(dependency('org.reflections:reflections'))
		include(dependency('org.javassist:javassist'))
	}
	exclude 'dummyThing'
	classifier = 'release'
}

mixin {
	defaultObfuscationEnv searge
	add sourceSets.main, 'mixin.cclient.refmap.json'
}

reobf {
	shadowJar {
		mappingType = 'SEARGE'
		classpath = sourceSets.main.compileClasspath
	}
}

jar {
	manifest {
		attributes(
			'MixinConfigs': 'mixin.cclient.json',
			'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
			'TweakOrder': 0,
			'FMLCorePluginContainsFMLMod': 'true',
			'FMLCorePlugin': 'c.client.impl.mixin.LoadingPlugin',
			'ForceLoadAsMod': 'true',
		)
	}
}

build.dependsOn(shadowJar)
